{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Cars API",
    "description": "Cars API registration",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/license/MIT"
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },

  "tags": [
    {
      "name": "Users",
      "description": "Create user"
    },
    {
      "name": "Sessions",
      "description": "Init sessions"
    },
    {
      "name": "Cars",
      "description": "API for cars in the system"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user in system",
        "requestBody": {
          "description": "User Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "User already exists."
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Sessions"],
        "summary": "Init a sessions",
        "requestBody": {
          "description": "Session Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Session"
              }
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Failed, User not found."
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/cars": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cars"],
        "summary": "Create a new car in system",
        "requestBody": {
          "description": "Car Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cars"],
        "summary": "Get all cars in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cars"
            }
          }
        }
      }
    },
    "/cars/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the car that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": ["Cars"],
        "summary": "Get car with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Car with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "404": {
            "description": "Failed. Car not found."
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update car with given ID",
        "tags": ["Cars"],
        "requestBody": {
          "description": "Car Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Car with new values of properties",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Car"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Car not found."
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete car with given ID",
        "tags": ["Cars"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete Car with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Failed. Cars not found."
          }
        }
      }
    }
  },

  "definitions": {
    "id": {
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "cars": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Sessions": {
      "type": "object",
      "properties": {
        "cars": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Session"
          }
        }
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "year": {
          "type": "integer"
        },
        "fuel": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "Cars": {
      "type": "object",
      "properties": {
        "cars": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Car"
          }
        }
      }
    }
  }
}
